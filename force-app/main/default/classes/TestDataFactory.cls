@isTest
public class TestDataFactory{
	public static void createTestRecordsForCheckOrderItemsBeforeUpdate(Integer numAccts, Integer numCntsPerAcct, Integer numOrds){
		//Create Accounts
		List<Account> accts =new List<Account>();
		for (Integer i =0; i <numAccts; i ++){
			Account a =new Account(Name ='TestAccount' +i);
			accts.add(a);
		}
		insert accts;

		//Create Contracts
		List<Contract> cnts =new List<Contract>();
		for (Integer j =0; j <numAccts; j ++){
			Account acct =accts[j];
			for (Integer k =0; k <numCntsPerAcct; k ++){
				cnts.add(new Contract(AccountId =acct.Id, Status ='Draft', StartDate =date.parse('01.09.2021'), ContractTerm =2));
			}
		}
		insert cnts;

		//Create Orders
		List<Order> ords =new List<Order>();
		for (Integer j =0; j <numAccts; j ++){
			Account acct =accts[j];
			for (Integer k =0; k <numCntsPerAcct; k ++){
				Contract cnt =cnts[k];
				for (Integer n =0; n <numOrds; n ++){
					Order o =new Order(AccountId =acct.Id, EffectiveDate =date.parse('01.09.2021'), ContractId =cnt.Id, Status ='Draft');
					ords.add(o);
				}
			}
		}
		insert ords;
	}

	public static void createTestRecordsForUpdateActiveCheckboxAfterInsert(Integer numAccts, Integer numCntsPerAcct, Integer numOrds){
		//Create Accounts
		List<Account> accts =new List<Account>();
		for (Integer i =0; i <numAccts; i ++){
			Account a =new Account(Name ='TestAccount' +i);
			accts.add(a);
		}
		insert accts;

		//Create Contracts
		List<Contract> cnts =new List<Contract>();
		for (Integer j =0; j <numAccts; j ++){
			Account acct =accts[j];
			for (Integer k =0; k <numCntsPerAcct; k ++){
				cnts.add(new Contract(AccountId =acct.Id, Status ='Draft', StartDate =date.parse('01.09.2021'), ContractTerm =2));
			}
		}
		insert cnts;

		//Create Orders
		List<Order> ords =new List<Order>();
		for (Integer j =0; j <numAccts; j ++){
			Account acct =accts[j];
			for (Integer k =0; k <numCntsPerAcct; k ++){
				Contract cnt =cnts[k];
				for (Integer n =0; n <numOrds; n ++){
					Order o =new Order(AccountId =acct.Id, EffectiveDate =date.parse('01.09.2021'), ContractId =cnt.Id, Status ='Draft');
					ords.add(o);
				}
			}
		}
		insert ords;
	}

	public static void createTestRecordsForUpdateActiveCheckboxAfterDelete(Integer numAccts, Integer numCntsPerAcct, Integer numOrds){
		//Create Accounts
		List<Account> accts =new List<Account>();
		for (Integer i =0; i <numAccts; i ++){
			Account a =new Account(Name ='TestAccount' +i);
			accts.add(a);
		}
		insert accts;

		//Create Contracts
		List<Contract> cnts =new List<Contract>();
		for (Integer j =0; j <numAccts; j ++){
			Account acct =accts[j];
			for (Integer k =0; k <numCntsPerAcct; k ++){
				cnts.add(new Contract(AccountId =acct.Id, Status ='Draft', StartDate =date.parse('01.09.2021'), ContractTerm =2));
			}
		}
		insert cnts;

		//Create Orders
		List<Order> ords =new List<Order>();
		for (Integer j =0; j <numAccts; j ++){
			Account acct =accts[j];
			for (Integer k =0; k <numCntsPerAcct; k ++){
				Contract cnt =cnts[k];
				for (Integer n =0; n <numOrds; n ++){
					Order o =new Order(AccountId =acct.Id, EffectiveDate =date.parse('01.09.2021'), ContractId =cnt.Id, Status ='Draft');
					ords.add(o);
				}
			}
		}
		insert ords;
	}
}